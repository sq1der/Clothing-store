document.addEventListener("DOMContentLoaded", async () => {
    const productsContainer = document.getElementById("products");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
    const token = localStorage.getItem("token");
    const authLink = document.getElementById("auth-link");

    if (token) {
        authLink.textContent = "üö™ –í—ã–π—Ç–∏";
        authLink.addEventListener("click", () => {
            localStorage.removeItem("token");
            localStorage.removeItem("role");
            localStorage.removeItem("userId");
            window.location.reload();
        });
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
    try {
        const response = await fetch("/products");
        const products = await response.json();

        products.forEach(product => {
            const productCard = document.createElement("div");
            productCard.classList.add("product-card");
            productCard.innerHTML = `
                <img class="product-img" src="${product.images[0]}" alt="${product.title}">
                <h3 class="product-title">${product.title}</h3>
                <p class="product-price">${product.price}‚Ç∏</p>
                <a href="product.html?id=${product._id}">üîç –ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
                <button data-id="${product._id}" class="add-to-cart">üõí –í –∫–æ—Ä–∑–∏–Ω—É</button>
            `;

            productsContainer.appendChild(productCard);
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–í –∫–æ—Ä–∑–∏–Ω—É"
        document.querySelectorAll(".add-to-cart").forEach(button => {
            button.addEventListener("click", async (event) => {
                if (!token) {
                    alert("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç!");
                    window.location.href = "login.html";
                    return;
                }
        
                const productCard = event.target.closest(".product-card");
        
                if (!productCard) {
                    console.error("–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
                    return;
                }
        
                // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
                const productId = event.target.dataset.id;
                const titleElement = productCard.querySelector(".product-title");
                const priceElement = productCard.querySelector(".product-price");
                const imageElement = productCard.querySelector(".product-img");
        
                if (!titleElement || !priceElement || !imageElement) {
                    console.error("–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ!", { productId, titleElement, priceElement, imageElement });
                    alert("–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
                    return;
                }
        
                const title = titleElement.textContent.trim();
                const price = priceElement.textContent.replace("‚Ç∏", "").trim();
                const imageUrl = imageElement.src;
        
                console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É:", { productId, title, price, imageUrl });
        
                const res = await fetch("/cart", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: `Bearer ${token}`
                    },
                    body: JSON.stringify({
                        productId,
                        totalPrice: price,
                        imageUrl,
                        title
                    })
                });
        
                if (res.ok) {
                    alert("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!");
                } else {
                    alert("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É");
                    const errorData = await res.json();
                    console.error("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", errorData);
                }
            });
        });
        
        
        

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:", error);
    }
});


document.addEventListener("DOMContentLoaded", () => {
    const authLink = document.getElementById("auth-link");
    const token = localStorage.getItem("token");

    if (token) {
        authLink.textContent = "üö™ –í—ã–π—Ç–∏";
        authLink.href = "#";
        authLink.addEventListener("click", () => {
            localStorage.removeItem("token");
            localStorage.removeItem("role");
            alert("–í—ã –≤—ã—à–ª–∏!");
            window.location.href = "index.html";
        });
    }
});

document.addEventListener("DOMContentLoaded", async () => {
    const productsContainer = document.getElementById("products");
    const categoryFilter = document.getElementById("category-filter");

    let allProducts = [];

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    async function loadProducts() {
        try {
            const res = await fetch("/products");
            allProducts = await res.json();
            displayProducts(allProducts);
            loadCategories();
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:", error);
        }
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    function displayProducts(products) {
        productsContainer.innerHTML = "";
        if (products.length === 0) {
            productsContainer.innerHTML = "<p>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>";
            return;
        }

        products.forEach(product => {
            const productCard = document.createElement("div");
            productCard.classList.add("product-card");

            productCard.innerHTML = `
                <img src="${product.images[0]}" alt="${product.title}">
                <h3>${product.title}</h3>
                <p>${product.price}‚Ç∏</p>
                <button class="btn-primary" onclick="addToCart('${product._id}')">üõí –í –∫–æ—Ä–∑–∏–Ω—É</button>
            `;
            productsContainer.appendChild(productCard);
        });
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    function loadCategories() {
        const categories = [...new Set(allProducts.map(p => p.category))]; // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categoryFilter.innerHTML = '<option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>';
        categories.forEach(category => {
            const option = document.createElement("option");
            option.value = category;
            option.textContent = category;
            categoryFilter.appendChild(option);
        });
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categoryFilter.addEventListener("change", () => {
        const selectedCategory = categoryFilter.value;
        if (selectedCategory === "all") {
            displayProducts(allProducts);
        } else {
            const filteredProducts = allProducts.filter(product => product.category === selectedCategory);
            displayProducts(filteredProducts);
        }
    });

    loadProducts();
});


