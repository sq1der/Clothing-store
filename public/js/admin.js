document.addEventListener("DOMContentLoaded", async () => {
    const token = localStorage.getItem("token");
    if (!token) {
        alert("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω! –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –∞–¥–º–∏–Ω.");
        window.location.href = "login.html";
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å
    const res = await fetch("/profile", { headers: { Authorization: `Bearer ${token}` } });
    const user = await res.json();
    if (user.role !== "admin") {
        alert("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!");
        window.location.href = "index.html";
        return;
    }

    // üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    async function loadProducts() {
        const res = await fetch("/products");
        const products = await res.json();
        const tbody = document.querySelector("#products-table tbody");
        tbody.innerHTML = "";

        products.forEach(product => {
            const row = document.createElement("tr");
            row.innerHTML = `
                <td>${product.title}</td>
                <td>${product.price}‚Ç∏</td>
                <td>
                    <button class="edit-btn" data-id="${product._id}">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                    <button class="delete-btn" data-id="${product._id}">üóë –£–¥–∞–ª–∏—Ç—å</button>
                </td>
            `;
            tbody.appendChild(row);
        });

        // üóë –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è
        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", async () => {
                const productId = button.dataset.id;
                if (confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?")) {
                    await fetch(`/products/${productId}`, {
                        method: "DELETE",
                        headers: { Authorization: `Bearer ${token}` }
                    });
                    loadProducts();
                }
            });
        });

        // ‚úèÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        document.querySelectorAll(".edit-btn").forEach(button => {
            button.addEventListener("click", async () => {
                const productId = button.dataset.id;
                
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
                const product = products.find(p => p._id === productId);
                if (!product) return alert("–û—à–∏–±–∫–∞: —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!");

                // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                const newTitle = prompt("–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:", product.title);
                const newPrice = prompt("–ù–æ–≤–∞—è —Ü–µ–Ω–∞:", product.price);
                const newCategory = prompt("–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:", product.category);
                const newDescription = prompt("–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:", product.description);
                const newLink = prompt("–ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä:", product.link);
                const newImageUrl = prompt("–ù–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ (URL):", product.images[0]);

                if (!newTitle || !newPrice || !newCategory || !newDescription || !newLink || !newImageUrl) {
                    alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
                    return;
                }

                const updatedProduct = {
                    category: newCategory,
                    title: newTitle,
                    description: newDescription,
                    price: newPrice,
                    link: newLink,
                    images: [newImageUrl]
                };

                console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", updatedProduct);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                const res = await fetch(`/products/${productId}`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: `Bearer ${token}`
                    },
                    body: JSON.stringify(updatedProduct)
                });

                if (res.ok) {
                    alert("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!");
                    loadProducts();
                } else {
                    const errorData = await res.json();
                    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", errorData);
                    alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞!");
                }
            });
        });
    }

    // üìå –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
    document.getElementById("add-product-btn").addEventListener("click", async () => {
        const title = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:");
        const price = prompt("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞:");
        const category = prompt("–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:");
        const description = prompt("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:");
        const link = prompt("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä:");
        const imageUrl = prompt("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É —Ç–æ–≤–∞—Ä–∞:");

        if (!title || !price || !category || !description || !link || !imageUrl) {
            alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
            return;
        }

        const productData = {
            category,
            title,
            description,
            price,
            link,
            images: [imageUrl]
        };

        console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä:", productData);

        const res = await fetch("/products", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${token}`
            },
            body: JSON.stringify(productData)
        });

        if (res.ok) {
            alert("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω!");
            loadProducts();
        } else {
            const errorData = await res.json();
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", errorData);
            alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞!");
        }
    });

    // üìå –í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω–∫–∏
    document.getElementById("logout-btn").addEventListener("click", () => {
        localStorage.clear();
        window.location.href = "login.html";
    });

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    loadProducts();
});
